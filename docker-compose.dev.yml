version: "3.8"

services:
  web:
    container_name: api
    build:
      context: ./
      dockerfile: docker/Dockerfile.DelveHotReload
    ports:
      - "5001:5001"
      - "5555:5555"
      - "7070:7070"
      - "40000:40000"
    environment:
      - PORT=5001
    security_opt:
      - "seccomp:unconfined"
    cap_add:
      - SYS_PTRACE
    depends_on:
      - postgesql
      - redis
    restart: always

  redis:
    image: redis:6-alpine
    container_name: api_redis
    ports:
      - "6379:6379"
    restart: always

  postgesql:
    image: postgres:14-alpine
    container_name: api_postgesql
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_db
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  prometheus:
    container_name: prometheus_container
    image: prom/prometheus
    volumes:
      - ./docker/monitoring/prometheus-local.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'

  node_exporter:
    container_name: node_exporter_container
    image: prom/node-exporter
    ports:
      - '9101:9100'

  grafana:
    container_name: grafana_container
    image: grafana/grafana
    ports:
      - '3000:3000'

  jaeger:
    container_name: jaeger_container
    image: jaegertracing/all-in-one:1.21
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411